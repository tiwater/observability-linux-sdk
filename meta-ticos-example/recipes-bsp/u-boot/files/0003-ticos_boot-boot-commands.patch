# Add ticos_boot boot command to u-boot environment, run as the first boot command
# Kernel command line enables the pstore/ramoops functionality with:
#   mem=384M : restrict usable memory in kernel to first 384MB
#   ramoops.mem_address=0x58000000 : Start ramoops buffer at 384MB boundary,
#     this is before the device tree location (as set in u-boot) of 0x5ed08000
#     QEMU maps the start of RAM to 0x40000000
#   ramoops.mem_size=0x20000 : Set ramoops buffer to 128KB

diff --git a/include/config_distro_bootcmd.h b/include/config_distro_bootcmd.h
index 3f724aa10f..7deb304653 100644
--- a/include/config_distro_bootcmd.h
+++ b/include/config_distro_bootcmd.h
@@ -319,6 +319,38 @@
 	BOOT_TARGET_DEVICES_references_VIRTIO_without_CONFIG_CMD_VIRTIO
 #endif

+#ifdef CONFIG_CMD_VIRTIO
+#define BOOTENV_SHARED_TICOS \
+	"ticos_boot=" \
+		BOOTENV_RUN_PCI_ENUM \
+		BOOTENV_RUN_VIRTIO_INIT \
+        "if virtio dev ${devnum}; then " \
+            "devtype=virtio; " \
+            "if env exists rootpart; then " \
+                "echo Booting from partition ${rootpart}; " \
+            "else " \
+                "setenv rootpart 2; saveenv; " \
+                "echo Boot partition not set, default to ${rootpart}; " \
+            "fi; " \
+            "setenv bootargs \"root=/dev/vda${rootpart} rootwait mem=384M ramoops.mem_address=0x58000000 ramoops.mem_size=0x20000\"; " \
+            "if test -e ${devtype} ${devnum}:${rootpart} /boot/Image; then " \
+                "load ${devtype} ${devnum}:${rootpart} ${kernel_addr_r} /boot/Image; " \
+                "booti ${kernel_addr_r} - ${fdt_addr}; " \
+            "else " \
+                "load ${devtype} ${devnum}:${rootpart} ${kernel_addr_r} /boot/zImage; " \
+                "bootz ${kernel_addr_r} - ${fdt_addr}; " \
+            "fi; " \
+        "fi\0"
+#define BOOTENV_DEV_TICOS	BOOTENV_DEV_BLKDEV
+#define BOOTENV_DEV_NAME_TICOS	BOOTENV_DEV_NAME_BLKDEV
+#else
+#define BOOTENV_SHARED_TICOS
+#define BOOTENV_DEV_TICOS \
+	BOOT_TARGET_DEVICES_references_TICOS_without_CONFIG_CMD_TICOS
+#define BOOTENV_DEV_NAME_TICOS \
+	BOOT_TARGET_DEVICES_references_TICOS_without_CONFIG_CMD_TICOS
+#endif
+
 #if defined(CONFIG_CMD_DHCP)
 #if defined(CONFIG_EFI_LOADER)
 /* http://www.iana.org/assignments/dhcpv6-parameters/dhcpv6-parameters.xml */
@@ -430,6 +462,7 @@
 	BOOTENV_SHARED_UBIFS \
 	BOOTENV_SHARED_EFI \
 	BOOTENV_SHARED_VIRTIO \
+	BOOTENV_SHARED_TICOS \
 	"boot_prefixes=/ /boot/\0" \
 	"boot_scripts=boot.scr.uimg boot.scr\0" \
 	"boot_script_dhcp=boot.scr.uimg\0" \
diff -Naur a/include/configs/qemu-arm.h b/include/configs/qemu-arm.h
--- a/include/configs/qemu-arm.h	2022-03-29 13:53:40.346225830 +0100
+++ b/include/configs/qemu-arm.h	2022-03-30 14:08:52.003821014 +0100
@@ -22,6 +22,7 @@
 /* Environment options */

 #define BOOT_TARGET_DEVICES(func) \
+	func(TICOS, ticos, 0) \
 	func(USB, usb, 0) \
 	func(SCSI, scsi, 0) \
 	func(VIRTIO, virtio, 0) \
